#!/usr/bin/env python3
import os
from pathlib import Path
import subprocess
import shutil
from tempfile import TemporaryDirectory

def _run(command: str, **kwargs):
    # TODO make this print to STDOUT in realtime
    print(f"> {command}")
    p = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, check=True, encoding="utf-8", **kwargs)
    print(p.stdout)
    return p

def update_package_lists():
    _run("apt update")

def install_tree():
    _run("apt install tree -y")

def install_ripgrep():
    # recommended for neovim-telescope
    # https://github.com/nvim-telescope/telescope.nvim#suggested-dependencies
    _run("apt install ripgrep -y")

def install_neovim():
    # TODO checkout 0.8 release instead of nightly
    # https://github.com/neovim/neovim/wiki/Building-Neovim

    # make sure install directory exists
    install_dir = Path(os.environ.get("WF_STATE_DIR", "/usr/local/")) / "neovim"
    install_dir.mkdir(exists_ok=True)

    # check if neovim is already installed
    if Path(install_dir / "bin/nvim").exists():
        return

    # install neovim ðŸš€
    # https://github.com/neovim/neovim/wiki/Building-Neovim
    with TemporaryDirectory() as tempdir:
        _run("apt install -y luajit ninja-build gettext libtool-bin cmake g++ pkg-config unzip curl")
        _run(f"git clone https://github.com/neovim/neovim {tmpdir}")
        _run(f"make CMAKE_BUILD_TYPE=Release", cwd=tempdir)
        _run(f"make CMAKE_INSTALL_PREFIX={install_dir} install", cwd=tempdir)


def install_dotfiles():
    shutil.copytree(Path(Path.home() / "dotfiles/dotfiles"), Path.home(), dirs_exist_ok=True)

def main() -> None:
    update_package_lists()
    install_tree()
    install_ripgrep()
    install_neovim()
    install_dotfiles()

if __name__ == "__main__":
    main()
